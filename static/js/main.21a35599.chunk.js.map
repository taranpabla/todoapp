{"version":3,"sources":["components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","Todolist","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21a35599.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value); //.target.value gets the input from the input text box\r\n    setInputText(e.target.value); //update state with input text\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault(); // prevents default behavior; stops page from being refreshed when buttom is clicked\r\n    setTodos([ //Create object with text, bool for completed and uniqueID\r\n      ...todos, \r\n      {text: inputText, completed: false, id: Math.random() * 1000},\r\n    ]);\r\n    setInputText(\"\"); // Clear out input text box\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  }\r\n\r\n  return(\r\n        <form>\r\n        <input \r\n          value={inputText} \r\n          onChange = {inputTextHandler} \r\n          type=\"text\" \r\n          className=\"todo-input\" \r\n        />\r\n        <button onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange = {statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form> \r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos})=> {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if(item.id === todo.id){\r\n                    return {\r\n                        ...item, \r\n                        completed: !item.completed,\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className = \"todo\">\r\n           <li className = {`todo-item ${todo.completed ? \"completed\" : \"\"} `}> {text}</li> \r\n           <button onClick = {completeHandler} className = \"complete-btn\"> \r\n               <i className = \"fas fa-check\"></i>\r\n            </button>\r\n           <button onClick = {deleteHandler} className = \"trash-btn\">\r\n               <i className = \"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Todo;","import React from 'react';\r\n//Import other components \r\nimport Todo from './Todo';\r\n\r\nconst Todolist = ({todos, setTodos, filteredTodos})=> {\r\n    console.log(todos);\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo \r\n                        setTodos = {setTodos} \r\n                        todos = {todos} \r\n                        key={todo.id} \r\n                        text={todo.text} \r\n                        id={todo.id}\r\n                        todo={todo}\r\n                    />\r\n                ))}    \r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todolist;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    const filterHandler = () => {\n      switch(status){\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandler();\n  }, [todos, status]);\n\n  \n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Taran's Todo List</h1>\n      </header>\n      <Form \n        inputText = {inputText} \n        todos = {todos} \n        setTodos = {setTodos} \n        setInputText = {setInputText}\n        setStatus = {setStatus}\n      />\n      <Todolist \n      filteredTodos = {filteredTodos}\n        setTodos = {setTodos} \n        todos = {todos} \n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}